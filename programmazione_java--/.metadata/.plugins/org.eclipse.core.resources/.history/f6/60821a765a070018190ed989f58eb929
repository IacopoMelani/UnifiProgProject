long maximumNumber(int[] a, int k) {
	long n = 0;

	return n;
}

long powerOfTen(long n) {
	return n * 10;
}

int max(int[] a, int position, int fposition) {
	int max = -1;
	int pMax = -1;
	for (int i = position; i < fposition; i++) {
		if (a[i] > max) {
			max = a[i];
			pMax = i;
		}
	}
	return pMax;
}

long putMaxFromRight(int[] a, int position, long n) {
	n = powerOfTen(n);
	return (long) a[max(a, position, a.length)] + n;
}

long putAllFromRight(int[] a, int position, long n) {
	for (int i = position; i < a.length; i++) {
		n = powerOfTen(n);
		n = n + a[i];
	}
	return n;
}

int[] a = {7, 4, 2, 9, 3, 5, 8, 1, 7, 5};

System.out.println(maximumNumber(a, 6));
