/*
 * Dato un array a di n numeri interi non negativi, l'indice H di a
 * e' definito come il massimo valore h, compreso tra 1 ed n, tale
 * l'h-esimo elemento di a in ordine non crescente sia non inferiore
 * ad h. Ad esempio, l'indice H di 
 * {2, 0, 3, 5, 6, 5, 4, 3, 2, 0, 1, 7, 0, 9}
 * e' 5, in quanto il quinto elemento in ordine non crescente e' 5 
 * (che e' uguale a 5), mentre il sesto elemento in ordine non 
 * crescente e' 4 (che e' minore di 6). Analogamente, l'indice H di 
 * {23, 1, 3, 14, 6, 15, 4, 13, 2, 10, 1, 17, 20, 19}
 * e' 8, in quanto l'ottavo elemento in ordine non crescente e' 10 
 * (che e' maggiore di 8), mentre il nono elemento in ordine non 
 * crescente e' 6 (che e' minore di 9). Infine, l'indice H di un 
 * array di elementi tutti uguali a 0 e', per convenzione, uguale a 0.
 * Scrivere un metodo, chiamato hIndex, che dato in input un
 * array di numeri interi non negativi, restituisce il suo indice H.
 */
int hIndex(int[] a) {
	int lenA = a.length;
	int h = 0;
	for(int i = 0; i<lenA;i++){
		if(i > a[i]){
			h = i;
			i = lenA;
		}
	}
	return h;
}

void sortArray(int[] a) {
	int i, j, indexMax, max, temp;
	for (i = 0; i < a.length - 1; i++) {
		max = a[i];
		indexMax = i;
		for (j = i + 1; j < a.length; j++) {
			if (max < a[j]) {
				max = a[j];
				indexMax = j;
			}
		}
		temp = a[i];
		a[i] = a[indexMax];
		a[indexMax] = temp;
	}
}

int[] copyArray(int[] a) {
	int lenA = a.length;
	int[] c = new int[lenA];
	for (int i = 0; i < lenA; i++) {
		c[i] = a[i];
	}
	return c;
}

void printArray(int[] a) {
	int lenA = a.length;
	for (int i = 0; i < lenA; i++) {
		System.out.println(a[i] + " ");
	}
}

int[] a = {2, 0, 3, 5, 6, 5, 4, 3, 2, 0, 1, 7, 0, 9};
int[] c = copyArray(a);
sortArray(c);
printArray(c);
int h = hIndex(c);
System.out.println();
