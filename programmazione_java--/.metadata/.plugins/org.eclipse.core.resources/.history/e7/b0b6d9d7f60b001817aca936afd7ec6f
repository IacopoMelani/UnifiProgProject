package javamm;

@SuppressWarnings("all")
public class StrangePartitioner {
  public static boolean strangePartition(int[] a) {
    boolean ris = false;
    int[] b = StrangePartitioner.copyArray(a);
    return false;
  }
  
  public static boolean genBinary(int[] a, int[] cpA, int b) {
    boolean ris = false;
    if ((b == 0)) {
      if ((StrangePartitioner.multipleOfTen(StrangePartitioner.sumArray(a, cpA, 1)) && StrangePartitioner.odd(StrangePartitioner.sumArray(a, cpA, 0)))) {
        ris = true;
      }
    } else {
      a[(b - 1)] = 0;
      StrangePartitioner.genBinary(a, cpA, (b - 1));
      a[(b - 1)] = 1;
      StrangePartitioner.genBinary(a, cpA, (b - 1));
    }
    return ris;
  }
  
  public static boolean odd(int n) {
    boolean ris = false;
    ris = ((n % 2) != 0);
    return ris;
  }
  
  public static boolean multipleOfTen(int n) {
    boolean ris = false;
    ris = ((n % 10) == 0);
    return ris;
  }
  
  public static int sumArray(int[] a, int[] binary, int c) {
    int sum = 0;
    for (int i = 0; (i < a.length); i++) {
      boolean _tripleEquals = (binary[i] == c);
      if (_tripleEquals) {
        int _plus = (sum + a[i]);
        sum = _plus;
      }
    }
    return sum;
  }
  
  public static int[] copyArray(int[] a) {
    int[] b = new int[a.length];
    for (int i = 0; (i < a.length); i++) {
      b[i] = a[i];
    }
    return b;
  }
  
  public static void main(String[] args) {
  }
}
