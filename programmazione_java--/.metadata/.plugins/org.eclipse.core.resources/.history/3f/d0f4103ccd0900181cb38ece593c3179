int ffd(int[] a, int s) {
	int cont = 0;
	selectionSort(a);
	int[] b = createGroup(a);
	putInGroup(a,b,s);
	
	return 0;
} 

int returnContOfPacking(int[] a){
	int cont = 0;
	for(int i = 0; i < a.length; i++){
		if(a[i] != 0){
			cont = cont + 1;
		}
	}
	return cont;
}

void putInGroup(int[] a, int[] group, int s){
		group[0] = a[0];
		a[0] = 0;
		int k = 0;
		for(int i = 0; i < a.length; i++){
			for(int j = 0; j < a.length; j++ ){
				if(group[j] + a[i] <= s){
					group[j] = group[j] + a[i];
					a[i] = 0;
					j = a.length;
				}
			}
		}
}

int[] createGroup(int[] a){
	int[] b = new int[a.length];
	return b;
}

void selectionSort(int[] a) {
	int indiceProssimoMinimo, min, temp, i, j;
	for (i = 0; i < a.length - 1; i++) {
		min = a[i];
		indiceProssimoMinimo = i;
		for (j = i + 1; j < a.length; j++) {
			if (a[j] > min) {
				min = a[j];
				indiceProssimoMinimo = j;
			}
		}
		temp = a[i];
		a[i] = a[indiceProssimoMinimo];
		a[indiceProssimoMinimo] = temp;
	}
}

void printArray(int[] a){
	for(int i = 0; i < a.length; i++){
		System.out.println(a[i]);
	}
}


int[] a = {4, 1, 2, 5, 3, 2, 3, 6, 3 };
int s = 6;
selectionSort(a);
int[] b = createGroup(a);
putInGroup(a,b,s);
System.out.println();










