package javamm;

@SuppressWarnings("all")
public class Armstrong {
  public static boolean armstrong(int n) {
    boolean b = false;
    int a = Armstrong.calculateArmstrong(n);
    if ((n == a)) {
      b = true;
    }
    return b;
  }
  
  public static int powerOfdigit(int n, int digit) {
    int ris = n;
    for (int i = 1; (i < digit); i++) {
      ris = (ris * n);
    }
    return ris;
  }
  
  public static int contDigit(int n) {
    int digit = 0;
    if ((n == 0)) {
      return 1;
    }
    while ((n != 0)) {
      {
        n = (n / 10);
        digit = (digit + 1);
      }
    }
    return digit;
  }
  
  public static int calculateArmstrong(int n) {
    int digit = Armstrong.contDigit(n);
    int ris = 0;
    int d = 0;
    while ((n != 0)) {
      {
        d = (n % 10);
        int _powerOfdigit = Armstrong.powerOfdigit(d, digit);
        int _plus = (ris + _powerOfdigit);
        ris = _plus;
        n = (n / 10);
      }
    }
    return ris;
  }
  
  public static void main(String[] args) {
    int n = 2;
    System.out.println(Armstrong.armstrong(153));
  }
}
