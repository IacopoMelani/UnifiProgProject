long duplicateDigit(int n) {
	int oldNumber = n;		//salvo vecchio numero
	long newNumber = 0;		// nuovo numero per raddoppio digit 
	long temp = 0;			// variabile temporanea per salvare il digit da raddoppiare
	while(n != 0){
		temp = n % 10;
		n = n / 10;
		temp = temp * 10 + temp;		//es temp = 1 -> 10 + 1 -> raddoppiata
		newNumber = newNumber * 100 + temp; // creo spazio per le due nuove cifre
	}
	/*pazzia personale -> uso prima il metodo invert per ribaltare il numero
	* poi chiamo zeroCont per controllare gli zeri iniziali 	
	*/
	return zeroCont(invertNumber(newNumber),oldNumber);
}

long invertNumber(long n) {
	long x = 0;
	while (n != 0) {
		x = x + n % 10;
		n = n / 10;
		x = x * 10;
	}
	return x / 10;
}

long zeroCont(long newNumber, int n){
if (n % 10 != 0)
	return newNumber;
else
	return zeroCont(newNumber * 100,n/10);	
}


System.out.println(duplicateDigit(666007600));