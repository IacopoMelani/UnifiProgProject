/*
 * Scrivere un metodo, detto frequences, che, dato 
 * in input un array a di numeri interi non vuoto, 
 * restituisca l'array delle frequenze degli 
 * elementi distinti di a, in ordine crescente 
 * dei valori degli elementi. Ad esempio, con 
 * input il vettore {1,6,5,8,6,6,8,5,3,1,6,8}, 
 * il metodo deve restituire l'array {2,1,2,4,3}, 
 * in quanto il valore 1 appare due volte, il 3 
 * una volta, il 5 due volte, il 6 quattro volte 
 * e l'8 tre volte. L'array in input non deve essere 
 * modificato dall'esecuzione del metodo.
 * 
 * ESEMPI
 * Input: {1,6,5,8,6,6,8,5,3,1,6,8}
 * Output: {2,1,2,4,3}
 * 
 * Input: {6,6,6,6}
 * Output: {4}
 * 
 * Input: {3,5,6,2}
 * Output: {1,1,1,1}
 */
int[] frequences(int[] a) {
	int[] b = copyArray(a);
	int[] f = createFrequences(b);
	int[] nf = reWriteFrequences(f);
	return nf;
}

int[] copyArray(int[] a) {
	int[] b = new int[a.length];
	for (int i = 0; i < a.length; i++) {
		b[i] = a[i];
	}
	return b;
}

int[] createFrequences(int[] a){
	int[] f = new int[10];
	for(int i = 0; i < a.length; i++){
		f[a[i]] = f[a[i]] + 1;
	}
	return f;
}

int contZero(int[] a){
	int cont = 0;
	for(int i = 0; i < a.length; i++){
		if(a[i] == 0){
			cont = cont + 1;
		}
	}
	return cont;
}

int[] reWriteFrequences(int[] f){
	int zero = contZero(f);
	int[] nF = new int[10 - zero];
	int i = 0;
	int k = 0;
	while(i < f.length){
		if(f[i] != 0){
			nF[k] = f[i];
			k = k + 1;
		}
		i = i +1;
	}
	return nF;
}

int max(int[] a){
	int max = 0;
	for(int i = 0; i < a.length; i++){
		if(a[i] > max)
	}
}

void printArray(int[] a) {
	for (int i = 0; i < a.length; i++) {
		System.out.println(a[i]);
	}
}



int[] a = {1, 2, 3, 4, 5, 6};
int[] b = copyArray(a);
printArray(b);





